{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errormessage/error.gif","components/errormessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","getCharacter","id","checkDesc","desc","length","slice","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","class","ErrorMessage","src","errorGif","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","updateChar","Math","floor","random","then","catch","onError","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyleDefault","style","CharList","charList","newCharListLoad","buttonDisaplay","isItemSelected","selectedChar","onRequest","onCharListLoading","newCharList","end","arr","item","imgStyle","props","onSelectChar","onKeyUp","e","key","tabIndex","renderItems","disabled","display","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","listComics","push","ErrorBoundary","errorInfo","children","App","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.967467a1.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\n\r\nclass MarvelService {\r\n    #apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    #apiKey = 'apikey=ece319229b427a80f4aa8d1a6f9bc405';\r\n    #offset = 250\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this.#offset) => {\r\n        const res = await this.getResource(`${this.#apiBase}characters?limit=9&offset=${offset}&${this.#apiKey}`)\r\n        return res.data.results.map(this.#transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this.#apiBase}characters/${id}?${this.#apiKey}`);\r\n        return this.#transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    checkDesc = (desc) => {\r\n        if (!desc) {\r\n            return \"The description about this character doesn't exist :(\"\r\n        } else if (desc.length > 210) {\r\n            return `${desc.slice(0, 210)}...`\r\n        } else {\r\n            return desc\r\n        }\r\n    }\r\n\r\n    #transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: this.checkDesc(char.description),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService","import './Spinner.scss'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n            <div class=\"loadingio-spinner-ripple-ojdo5znqif\"><div class=\"ldio-xxwew8x6rak\">\r\n                <div></div><div></div>\r\n            </div></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorGif from './error.gif'\r\nimport './ErrorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img className='error_gif' src={errorGif} alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { Component } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errormessage/ErrorMessage';\n\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 10000)\n    }\n\n    // componentWillUnmount() {\n    //     clearInterval(this.timerId)\n    // }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000) // 1009100\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(error || loading) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n    let imgStyleDefault = { 'objectFit': 'cover' }\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyleDefault = { 'objectFit': 'contain' }\n    }\n\n    return (\n        <div className=\"randomchar__block\" >\n            <img style={imgStyleDefault} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errormessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newCharListLoad: false,\n        offset: 250,\n        buttonDisaplay: true,\n        isItemSelected: false\n    }\n\n    selectedChar = null\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        // window.addEventListener('scroll', this.onBottomOfPage)\n        this.onRequest()\n    }\n\n    // componentWillUnmount() {\n    //     window.removeEventListener('scroll', this.onBottomOfPage)\n    // }\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newCharListLoad: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    // onBottomOfPage = () => {\n    //     if ((window.innerHeight + window.pageYOffset) >= document.body.offsetHeight) {\n    //         this.onRequest(this.state.offset)\n    //     }\n    // }\n\n    onCharLoaded = (newCharList) => {\n        let end = false\n        if (newCharList.length < 9) {\n            end = true\n        }\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newCharListLoad: false,\n            offset: offset + 9,\n            buttonDisaplay: end\n        }))\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onSelectChar(item.id)\n                    }}\n                    onKeyUp={(e) => {\n                        if (e.key === \"Enter\" || e.key === \" \") {\n                            this.props.onSelectChar(item.id)\n                        }\n                    }}\n                    tabIndex={0}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    // const characters = charList.map(char => {\n    //     const { id, thumbnail, name } = char\n    //     return (\n    //         <li className=\"char__item\" key={id}>\n    //             <img src={thumbnail} alt={name} />\n    //             <div className=\"char__name\">{name}</div>\n    //         </li>\n    //     )\n    // })\n\n    render() {\n        const { charList, loading, error, offset, newCharListLoad, buttonDisaplay } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    onClick={() => { this.onRequest(offset) }}\n                    disabled={newCharListLoad}\n                    style={{ display: buttonDisaplay ? 'none' : 'block' }}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n\n    }\n\n}\n\nCharList.propTypes = {\n    onSelectChar: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errormessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\n\nimport './charInfo.scss';\n\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    updateChar = () => {\n        if (!this.props.charId) {\n            return;\n        }\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(this.props.charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        const skeleton = char || error || loading ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'unset' };\n    }\n\n    let listComics = []\n    for (let id = 0; id < comics.length; id++) {\n        if (id > 9) break;\n        listComics.push((<li className=\"char__comics-item\"\n            key={id}>\n            {comics[id].name}\n        </li>))\n    }\n\n    listComics = listComics.length === 0 ? \"This character hasn't appeared in any comics\" : listComics\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {listComics}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n};\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errormessage/ErrorMessage\";\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","\nimport { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onSelectChar = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\" >\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onSelectChar={this.onSelectChar} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}